AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template deploys a VPC with possibility of multi-region and two AZs

Parameters:
  Environment:
    Description: An environment name that will be prefixed to resource names
    Type: String
    AllowedValues:
      - prod
      - stag
      - dev
    ConstraintDescription: Environment is not valid
  Appname:
    Type: String

Mappings:
  Variables:
    # Add or modify your region
    us-west-2:
      VpcCIDR: 10.192.0.0/16
      PublicSubnet1CIDR: 10.192.10.0/24
      PublicSubnet2CIDR: 10.192.11.0/24
      PrivateSubnet1CIDR: 10.192.12.0/24
      PrivateSubnet2CIDR: 10.192.13.0/24
    eu-west-2:
      VpcCIDR: 10.193.0.0/16
      PublicSubnet1CIDR: 10.193.10.0/24
      PublicSubnet2CIDR: 10.193.11.0/24
      PrivateSubnet1CIDR: 10.195.12.0/24
      PrivateSubnet2CIDR: 10.195.13.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap
        - Variables
        - !Ref AWS::Region
        - VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: security

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: security

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !FindInMap
        - Variables
        - !Ref AWS::Region
        - PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: security
        - Key: description
          Value: !Sub ${Environment} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !FindInMap
        - Variables
        - !Ref AWS::Region
        - PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: security
        - Key: description
          Value: !Sub ${Environment} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: !FindInMap
        - Variables
        - !Ref AWS::Region
        - PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: security
        - Key: description
          Value: !Sub ${Environment} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: FindInMap
        - Variables
        - !Ref AWS::Region
        - PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: security
        - Key: description
          Value: !Sub ${Environment} Private Subnet (AZ2)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: type
          Value: network
        - Key: env
          Value: !Ref Environment

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: type
          Value: network
        - Key: env
          Value: !Ref Environment

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  # ======= PARAMETERS =========
  # Save all exported parameters to SSM

  VPCID:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${Appname}-${Environment}-vpc-id
      Tags:
        app: !Ref Appname
        env: !Ref Environment
        type: parameter
        description: VpcId
      Type: String
      Value: !Ref VPC

  PublicSubnetId1:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${Appname}-${Environment}-publicSubnet1-id
      Tags:
        app: !Ref Appname
        env: !Ref Environment
        type: parameter
        description: PublicSubnetId1
      Type: String
      Value: !Ref PublicSubnet1

  PublicSubnetId2:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${Appname}-${Environment}-publicSubnet2-id
      Tags:
        app: !Ref Appname
        env: !Ref Environment
        type: parameter
        description: PublicSubnetId2
      Type: String
      Value: !Ref PublicSubnet2

  PrivateSubnetId1:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${Appname}-${Environment}-privateSubnet1-id
      Tags:
        app: !Ref Appname
        env: !Ref Environment
        type: parameter
        description: PrivateSubnetId1
      Type: String
      Value: !Ref PublicSubnet1

  PrivateSubnetId2:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${Appname}-${Environment}-privateSubnet2-id
      Tags:
        app: !Ref Appname
        env: !Ref Environment
        type: parameter
        description: PrivateSubnetId2
      Type: String
      Value: !Ref PrivateSubnet2


Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
